@using Microsoft.AspNetCore.Html
@{
    ViewData["Title"] = "La mia prima  pizzeria";
    // Layout ="~/Views/Shared/_LAyoutPage1.cshtml"
    ViewData["Name"] = "Marco";
    ViewData["LastName"] = "Truncellito";
 /* 6. Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina
a. la data di 7 giorni fa
b. che giorno della settimana Ã¨ oggi (il risultato dovrÃ  essere il nome del giorno (LunedÃ¬, MartedÃ¬, ...)
c. che giorno della settimana sarÃ  nello stesso giorno e mese di oggi ma tra un anno 
(il risultato dovrÃ  essere il nome del giorno (LunedÃ¬, MartedÃ¬, ...)*/
}
@{
    Layout = null;
}
@functions{
    public IHtmlContent DateInfo()
    {
        DateTime Today =  DateTime.Now;
        DateTime ToOneYear = new DateTime(Today.Year + 1, Today.Month, Today.Day);
        DateTime SevenDaysAgo = Today.AddDays(-7);
        return Html.Raw($@"
            <ul>
                <li>
                   7 Giorni fa: {SevenDaysAgo}
                </li>
                <li>
                    Oggi è: {DateTime.Today.DayOfWeek}    
                </li>
                <li>
                    Tra un anno sarà: {ToOneYear.DayOfWeek}   
                </li>
            </ul>
        ");
    } 
    public IHtmlContent SumNumbers(int iNumb)
    {
        int iSum = 0;
        for(int i = 1; i <= iNumb; i++)
            iSum += i;
        return Html.Raw($@"
            <span>{iSum}</span>
        ");
    }
    public IHtmlContent HowManyLetter(string sString, string sLetter)
    {
        int Counter = 0;
        foreach(char Lett in sString)
        {
            if (Lett == Convert.ToChar(sLetter))
                Counter++;
        }
        return Html.Raw($@"<span> Il numero di volte che la lettera {sLetter} compare nel testo è : {Counter}");
    }
    public IHtmlContent IncludedNumbers(int StartInterval, int StopInterval)
    {
        List<int> Numbers = new List<int>();
        string PrintNumber = "";
        Random rNumb = new Random();

        for(int i = 0; i < 20; i++)
        {
            int genericNumb = rNumb.Next(1,90);
            Numbers.Add(genericNumb);    
            if(genericNumb >= StartInterval && genericNumb <= StopInterval)
                PrintNumber += Convert.ToString(genericNumb) + " ";
        }
        return Html.Raw($@"
            <span> Tra venti numeri casuali, i numeri compresi tra {StartInterval} e {StopInterval} sono: {PrintNumber}</span>
            ");
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - la_mia_pizzeria_static</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/la_mia_pizzeria_static.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-danger border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand text-white" asp-area="" asp-controller="Home" asp-action="Index">Pizzeria Static</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            <section class="row"> 
                <div class="col-12"> @HowManyLetter("nel mezzo del cammin di nostra vita", "a")</div>
                <div class="col-12">@IncludedNumbers(20,70)</div>
                <div class = "col-12"> @DateTime.Now.ToString("dd'-'MM'-'yyyy'T'HH':'mm':'ss")</div>
                <div class = "col-12"> @DateInfo() </div>
                <div class="col-12 text-center text-uppercase text-danger display-2 mb-3">Le nostre pizze</div>
                <div class="col-12 col-sm-6 col-lg-4">
                    <div class="card mb-2" style="width: 18rem;">
                      <img src="~/img/prima_pizza.jpg" class="card-img-top"  width="18rem" height="200px">
                      <div class="card-body">
                        <h5 class="card-title">Pizza Margerita</h5>
                        <p class="card-text">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s </p>
                         <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal">
                          Aggiungi al carrello
                        </button>
                        <span class="btn btn-danger text-white">7.99€</span>
                      </div>
                    </div>
                </div>
                 <div class="col-12 col-sm-6 col-lg-4">
                    <div class="card mb-2" style="width: 18rem;">
                      <img src="~/img/seconda_pizza.jpg" class="card-img-top" width="18rem" height="200px">
                      <div class="card-body">
                        <h5 class="card-title">Pizza Diavola</h5>
                        <p class="card-text">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s </p>
                         <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal">
                          Aggiungi al carrello
                        </button>
                        <span class="btn btn-danger text-white">8.99€</span>
                      </div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-lg-4">
                    <div class="card mb-2" style="width: 18rem;">
                      <img src="~/img/terza_pizza.jpg" class="card-img-top"  width="18rem" height="200px">
                      <div class="card-body">
                        <h5 class="card-title">Pizza Zucca e funghi</h5>
                        <p class="card-text">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s </p>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal">
                          Aggiungi al carrello
                        </button>
                        <span class="btn btn-danger text-white">10.99€</span>
                         @SumNumbers(10)
                      </div>
                    </div>
                </div>
            </section>
           <!-- Button trigger modal -->
            <!-- Modal -->
            <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header bg-danger">
                    <h5 class="modal-title text-white" id="exampleModalLabel">Carrello</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body">
                    ...
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-dark text-white" data-bs-dismiss="modal">Annulla</button>
                    <button type="button" class="btn btn-danger">Procedi all'acquisto</button>
                  </div>
                </div>
              </div>
            </div>
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2022 - la_mia_pizzeria_static - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
            <h6>@ViewData["Name"] @ViewData["LastName"]</h6>
        </div>
    </footer>

    <!-- Button trigger modal -->
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
</body>
</html>
